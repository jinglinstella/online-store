package com.example.demo.service;

//import static org.junit.Assert.assertEquals;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.util.*;

//import org.junit.Test;
import com.example.demo.domain.Area;
import com.example.demo.domain.Owner;
import com.example.demo.domain.Shop;
import com.example.demo.domain.ShopCategory;
import com.example.demo.dto.ImageHolder;
import com.example.demo.dto.ShopDto;
import com.example.demo.repository.AreaRepository;
import com.example.demo.service.impl.AreaServiceImpl;
import org.springframework.beans.factory.annotation.Autowired;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.transaction.annotation.Transactional;

import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.ArgumentMatchers.any;
import static org.mockito.ArgumentMatchers.anyLong;
import static org.mockito.Mockito.*;
@ExtendWith(MockitoExtension.class)
@SpringBootTest
@Transactional
public class ShopServiceTest {

    @Autowired
    private ShopService shopService;

    @Autowired
    private OwnerService ownerService;

    @Autowired
    private AreaService areaService;

    @Autowired
    private ShopCategoryService shopCategoryService;

    @Test
    public void testAddShop() throws FileNotFoundException {
        Shop shop = mockANewShop(1L, 1L, 2L, ownerService, areaService, shopCategoryService);
        File shopImg = new File("D:\\stell\\Desktop\\SDE-CV\\spring-courses\\temp\\demo\\demo\\src\\main\\resources\\test-images\\newbookstore.png");
        InputStream inputStream = new FileInputStream(shopImg);
        ImageHolder imageHolder = new ImageHolder(shopImg.getName(),inputStream);
        ShopDto shopDto = shopService.addShop(shop, imageHolder);
        assertEquals("verifying info provided", shopDto.getStateInfo());
    }

    private Shop mockANewShop(Long userId, Long areaId, Long shopCategoryId, OwnerService ownerService, AreaService areaService, ShopCategoryService shopCategoryService) {
        Shop shop = new Shop();
//        Owner owner = new Owner();
//        Area area = new Area();
//        ShopCategory shopCategory = new ShopCategory();

        Owner owner = ownerService.getOwnerById(userId);
        Area area = areaService.findById(areaId);
        ShopCategory shopCategory = shopCategoryService.findById(shopCategoryId);

//        owner.setOwnerId(userId);
//        area.setAreaId(areaId);
//        shopCategory.setShopCategoryId(shopCategoryId);

        shop.setArea(area);
        shop.setOwner(owner);
        shop.setShopCategory(shopCategory);
        shop.setShopName("20201230newshop");
        shop.setShopDesc("this is a shop generated by the unit test");
        shop.setShopAddr("123 Boyton Ave");
        shop.setPhone("4323456753");
        shop.setShopImg("testImg");
        shop.setTimeCreated(new Date());
        shop.setEnableStatus(0);
        shop.setPriority(1);

        return shop;
    }


}
